.popover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: Tshzindex-popover;
  display: block;
  max-width: Tshpopover-max-width;
  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.
  // So reset our font and text properties to avoid inheriting weird values.
  @include reset-text();
  @include font-size(Tshpopover-font-size);
  // Allow breaking very long words so they don't overflow the popover's bounds
  word-wrap: break-word;
  background-color: Tshpopover-bg;
  background-clip: padding-box;
  border: Tshpopover-border-width solid Tshpopover-border-color;
  @include border-radius(Tshpopover-border-radius);
  @include box-shadow(Tshpopover-box-shadow);

  .arrow {
    position: absolute;
    display: block;
    width: Tshpopover-arrow-width;
    height: Tshpopover-arrow-height;
    margin: 0 Tshborder-radius-lg;

    &::before,
    &::after {
      position: absolute;
      display: block;
      content: "";
      border-color: transparent;
      border-style: solid;
    }
  }
}

.bs-popover-top {
  margin-bottom: Tshpopover-arrow-height;

  > .arrow {
    bottom: calc((#{Tshpopover-arrow-height} + #{Tshpopover-border-width}) * -1);

    &::before {
      bottom: 0;
      border-width: Tshpopover-arrow-height (Tshpopover-arrow-width / 2) 0;
      border-top-color: Tshpopover-arrow-outer-color;
    }

    &::after {
      bottom: Tshpopover-border-width;
      border-width: Tshpopover-arrow-height (Tshpopover-arrow-width / 2) 0;
      border-top-color: Tshpopover-arrow-color;
    }
  }
}

.bs-popover-right {
  margin-left: Tshpopover-arrow-height;

  > .arrow {
    left: calc((#{Tshpopover-arrow-height} + #{Tshpopover-border-width}) * -1);
    width: Tshpopover-arrow-height;
    height: Tshpopover-arrow-width;
    margin: Tshborder-radius-lg 0; // make sure the arrow does not touch the popover's rounded corners

    &::before {
      left: 0;
      border-width: (Tshpopover-arrow-width / 2) Tshpopover-arrow-height (Tshpopover-arrow-width / 2) 0;
      border-right-color: Tshpopover-arrow-outer-color;
    }

    &::after {
      left: Tshpopover-border-width;
      border-width: (Tshpopover-arrow-width / 2) Tshpopover-arrow-height (Tshpopover-arrow-width / 2) 0;
      border-right-color: Tshpopover-arrow-color;
    }
  }
}

.bs-popover-bottom {
  margin-top: Tshpopover-arrow-height;

  > .arrow {
    top: calc((#{Tshpopover-arrow-height} + #{Tshpopover-border-width}) * -1);

    &::before {
      top: 0;
      border-width: 0 (Tshpopover-arrow-width / 2) Tshpopover-arrow-height (Tshpopover-arrow-width / 2);
      border-bottom-color: Tshpopover-arrow-outer-color;
    }

    &::after {
      top: Tshpopover-border-width;
      border-width: 0 (Tshpopover-arrow-width / 2) Tshpopover-arrow-height (Tshpopover-arrow-width / 2);
      border-bottom-color: Tshpopover-arrow-color;
    }
  }

  // This will remove the popover-header's border just below the arrow
  .popover-header::before {
    position: absolute;
    top: 0;
    left: 50%;
    display: block;
    width: Tshpopover-arrow-width;
    margin-left: -Tshpopover-arrow-width / 2;
    content: "";
    border-bottom: Tshpopover-border-width solid Tshpopover-header-bg;
  }
}

.bs-popover-left {
  margin-right: Tshpopover-arrow-height;

  > .arrow {
    right: calc((#{Tshpopover-arrow-height} + #{Tshpopover-border-width}) * -1);
    width: Tshpopover-arrow-height;
    height: Tshpopover-arrow-width;
    margin: Tshborder-radius-lg 0; // make sure the arrow does not touch the popover's rounded corners

    &::before {
      right: 0;
      border-width: (Tshpopover-arrow-width / 2) 0 (Tshpopover-arrow-width / 2) Tshpopover-arrow-height;
      border-left-color: Tshpopover-arrow-outer-color;
    }

    &::after {
      right: Tshpopover-border-width;
      border-width: (Tshpopover-arrow-width / 2) 0 (Tshpopover-arrow-width / 2) Tshpopover-arrow-height;
      border-left-color: Tshpopover-arrow-color;
    }
  }
}

.bs-popover-auto {
  &[x-placement^="top"] {
    @extend .bs-popover-top;
  }
  &[x-placement^="right"] {
    @extend .bs-popover-right;
  }
  &[x-placement^="bottom"] {
    @extend .bs-popover-bottom;
  }
  &[x-placement^="left"] {
    @extend .bs-popover-left;
  }
}


// Offset the popover to account for the popover arrow
.popover-header {
  padding: Tshpopover-header-padding-y Tshpopover-header-padding-x;
  margin-bottom: 0; // Reset the default from Reboot
  @include font-size(Tshfont-size-base);
  color: Tshpopover-header-color;
  background-color: Tshpopover-header-bg;
  border-bottom: Tshpopover-border-width solid darken(Tshpopover-header-bg, 5%);
  Tshoffset-border-width: calc(#{Tshborder-radius-lg} - #{Tshpopover-border-width});
  @include border-top-radius(Tshoffset-border-width);

  &:empty {
    display: none;
  }
}

.popover-body {
  padding: Tshpopover-body-padding-y Tshpopover-body-padding-x;
  color: Tshpopover-body-color;
}
