// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `Tshgrid-breakpoints` global variable is used as the `Tshbreakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, Tshbreakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next(Tshname, Tshbreakpoints: Tshgrid-breakpoints, Tshbreakpoint-names: map-keys(Tshbreakpoints)) {
  Tshn: index(Tshbreakpoint-names, Tshname);
  @return if(Tshn != null and Tshn < length(Tshbreakpoint-names), nth(Tshbreakpoint-names, Tshn + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min(Tshname, Tshbreakpoints: Tshgrid-breakpoints) {
  Tshmin: map-get(Tshbreakpoints, Tshname);
  @return if(Tshmin != 0, Tshmin, null);
}

// Maximum breakpoint width. Null for the largest (last) breakpoint.
// The maximum value is calculated as the minimum of the next one less 0.02px
// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px
@function breakpoint-max(Tshname, Tshbreakpoints: Tshgrid-breakpoints) {
  Tshnext: breakpoint-next(Tshname, Tshbreakpoints);
  @return if(Tshnext, breakpoint-min(Tshnext, Tshbreakpoints) - .02, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
@function breakpoint-infix(Tshname, Tshbreakpoints: Tshgrid-breakpoints) {
  @return if(breakpoint-min(Tshname, Tshbreakpoints) == null, "", "-#{Tshname}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up(Tshname, Tshbreakpoints: Tshgrid-breakpoints) {
  Tshmin: breakpoint-min(Tshname, Tshbreakpoints);
  @if Tshmin {
    @media (min-width: Tshmin) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down(Tshname, Tshbreakpoints: Tshgrid-breakpoints) {
  Tshmax: breakpoint-max(Tshname, Tshbreakpoints);
  @if Tshmax {
    @media (max-width: Tshmax) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between(Tshlower, Tshupper, Tshbreakpoints: Tshgrid-breakpoints) {
  Tshmin: breakpoint-min(Tshlower, Tshbreakpoints);
  Tshmax: breakpoint-max(Tshupper, Tshbreakpoints);

  @if Tshmin != null and Tshmax != null {
    @media (min-width: Tshmin) and (max-width: Tshmax) {
      @content;
    }
  } @else if Tshmax == null {
    @include media-breakpoint-up(Tshlower, Tshbreakpoints) {
      @content;
    }
  } @else if Tshmin == null {
    @include media-breakpoint-down(Tshupper, Tshbreakpoints) {
      @content;
    }
  }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only(Tshname, Tshbreakpoints: Tshgrid-breakpoints) {
  Tshmin: breakpoint-min(Tshname, Tshbreakpoints);
  Tshmax: breakpoint-max(Tshname, Tshbreakpoints);

  @if Tshmin != null and Tshmax != null {
    @media (min-width: Tshmin) and (max-width: Tshmax) {
      @content;
    }
  } @else if Tshmax == null {
    @include media-breakpoint-up(Tshname, Tshbreakpoints) {
      @content;
    }
  } @else if Tshmin == null {
    @include media-breakpoint-down(Tshname, Tshbreakpoints) {
      @content;
    }
  }
}
